package com.tipgame.Administration;

import org.hibernate.Session;

import com.tipgame.data.GameMatch;
import com.tipgame.database.DatabaseHelper;
import com.tipgame.ui.Tipp.FixtureView;
import com.tipgame.ui.Tipp.ResultView;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;

public class FinalResultAddView extends CustomComponent {

	private static final long serialVersionUID = 2278346786920999261L;

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private DatabaseHelper databaseHelper;
	private GameMatch match;
	private ResultView resultView;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FinalResultAddView(GameMatch match) {
		this.match = match;
		this.databaseHelper = new DatabaseHelper();
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		setAddFinalResultView();
	}

	private void setAddFinalResultView()
	{
		Panel panel = new Panel();
		panel.setWidth("100%");
		panel.setHeight("100%");
		panel.setScrollable(true);
		
		GridLayout grid = new GridLayout();
		grid.setWidth("100%");
		grid.setHeight("100%");
		grid.setColumns(3);
		
		panel.addComponent(grid);
		
		FixtureView fixture = new FixtureView(match.getHomeTeamName(), match.getHomeTeamImage(),
				match.getAwayTeamName(), match.getAwayTeamImage());
		fixture.setGameMatch(match);
		grid.addComponent(fixture, 0, 0);
		
		resultView = new ResultView(match.getResultFinalHomeTeam(), match.getResultFinalAwayTeam(), true, "", false);
		grid.addComponent(resultView, 1, 0);
		
		Button button = new Button("", this, "onSubmitFinalResultButtonClick");
		button.setCaption("Resultat eintragen");
		grid.addComponent(button, 2, 0);
		grid.setComponentAlignment(button, new Alignment(48));
	}
	
	
	public void onSubmitFinalResultButtonClick(Button.ClickEvent event)
	{
		Session session = databaseHelper.getHibernateSession();
		session.beginTransaction();
		databaseHelper.attachPojoToSession(session, match);
		match.setResultFinalHomeTeam(resultView.getResultHomeTeam());
		match.setResultFinalAwayTeam(resultView.getResultAwayTeam());
		
		session.update(match);
		
		session.getTransaction().commit();
		
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		return mainLayout;
	}

}
