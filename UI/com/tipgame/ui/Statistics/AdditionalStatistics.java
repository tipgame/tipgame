package com.tipgame.ui.Statistics;

import com.tipgame.utils.TipgameUtils;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;
import com.vaadin.ui.themes.Runo;

public class AdditionalStatistics extends CustomComponent {

	private static final long serialVersionUID = -4790114608739028625L;
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panel_1;
	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AdditionalStatistics() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		setAdditionalStatisticsOnLayout();
	}

	private void setAdditionalStatisticsOnLayout()
	{
		EMWinnerStatistic eMWimmerStatistic = new EMWinnerStatistic();
		panel_1.addComponent(eMWimmerStatistic);
		
		IFBAMemberStatistic ifbaMemberStatistic = new IFBAMemberStatistic();
		panel_1.addComponent(ifbaMemberStatistic);
		
		buildTable();
		
			
	}
	
	private void buildTable()
	{
		Table worldRankingTable = new Table();
		worldRankingTable.setImmediate(false);
		worldRankingTable.setWidth("50.0%");
		worldRankingTable.setHeight("500px");
		worldRankingTable.addContainerProperty("Rang", String.class,  null);
		worldRankingTable.addContainerProperty("Name",  String.class,  null);
		worldRankingTable.addContainerProperty("Punkte", String.class, null);
		TipgameUtils.fillWorldRankingTable(worldRankingTable);
		
		VerticalLayout vL = new VerticalLayout();
		vL.setWidth("50%");
		vL.setHeight("50px");
		Label lab = new Label();
		lab.addStyleName("helloLabel");
		lab.setSizeUndefined();
		lab.setValue("Weltrangliste IFBA");
		
		vL.addComponent(lab);
		vL.setComponentAlignment(lab, Alignment.MIDDLE_CENTER);
		panel_1.addComponent(vL);
		panel_1.addComponent(worldRankingTable);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setSizeFull();
		panel_1.setImmediate(false);
		panel_1.setScrollable(true);
		
		return panel_1;
	}

}
