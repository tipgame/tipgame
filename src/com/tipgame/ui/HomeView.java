package com.tipgame.ui;

import org.hibernate.Session;

import com.tipgame.data.User;
import com.tipgame.database.DatabaseHelper;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.themes.Runo;

public class HomeView extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private GridLayout homeViewGridLayout;
	@AutoGenerated
	private Table tableTopTen;
	@AutoGenerated
	private Label labelGreetings;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private DatabaseHelper _DatabaseHelper;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomeView(User user) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
		_DatabaseHelper = new DatabaseHelper();
		setSalutation(user);
		fillTopTenTable();
	}
	
	private void setSalutation(User user)
	{
		Session session = _DatabaseHelper.getHibernateSession();
		session.beginTransaction();
		
		_DatabaseHelper.attachPojoToSession(session, user);
		
		labelGreetings.setValue("Herzlich Willkommen "+user.getChristianname()+" "+user.getName());
		
		session.getTransaction().commit();
	}
	
	private void fillTopTenTable()
	{
		tableTopTen.addItem(new Object[]{"1", "Test1", "100"},1);
		tableTopTen.addItem(new Object[]{"2", "Test2", "80"},2);
		tableTopTen.addItem(new Object[]{"3", "Test3", "70"},3);
		tableTopTen.addItem(new Object[]{"4", "Test4", "60"},4);
		tableTopTen.addItem(new Object[]{"5", "Test5", "50"},5);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// homeViewGridLayout
		homeViewGridLayout = buildHomeViewGridLayout();
		mainLayout.addComponent(homeViewGridLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildHomeViewGridLayout() {
		// common part: create layout
		homeViewGridLayout = new GridLayout();
		homeViewGridLayout.setImmediate(false);
		homeViewGridLayout.setWidth("100.0%");
		homeViewGridLayout.setHeight("100.0%");
		homeViewGridLayout.setMargin(true);
		homeViewGridLayout.setRows(3);
		
		// labelGreetings
		labelGreetings = new Label();
		labelGreetings.setImmediate(false);
		labelGreetings.setWidth("-1px");
		labelGreetings.setHeight("-1px");
		labelGreetings.setValue("");
		labelGreetings.setStyleName(Runo.LABEL_H1);
		homeViewGridLayout.addComponent(labelGreetings, 0, 1);
		homeViewGridLayout.setComponentAlignment(labelGreetings, new Alignment(
				48));		
		
		setTable();
		homeViewGridLayout.addComponent(tableTopTen, 0, 2);
		
		return homeViewGridLayout;
	}
	
	private void setTable()
	{
		tableTopTen = new Table();
		tableTopTen.setCaption("Top Ten");
		tableTopTen.setImmediate(false);
		tableTopTen.setWidth("100.0%");
		tableTopTen.setHeight("134px");
		tableTopTen.addContainerProperty("Rang", String.class,  null);
		tableTopTen.addContainerProperty("Name",  String.class,  null);
		tableTopTen.addContainerProperty("Punkte", String.class, null);
	}
}
