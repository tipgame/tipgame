package com.tipgame.ui;

import java.util.Arrays;
import java.util.LinkedHashSet;
import com.invient.vaadin.charts.Color.RGB;
import com.invient.vaadin.charts.InvientCharts;
import com.invient.vaadin.charts.InvientCharts.DecimalPoint;
import com.invient.vaadin.charts.InvientCharts.Series;
import com.invient.vaadin.charts.InvientCharts.SeriesType;
import com.invient.vaadin.charts.InvientCharts.XYSeries;
import com.invient.vaadin.charts.InvientChartsConfig;
import com.invient.vaadin.charts.InvientChartsConfig.AreaConfig;
import com.invient.vaadin.charts.InvientChartsConfig.AxisBase.AxisTitle;
import com.invient.vaadin.charts.InvientChartsConfig.CategoryAxis;
import com.invient.vaadin.charts.InvientChartsConfig.HorzAlign;
import com.invient.vaadin.charts.InvientChartsConfig.Legend;
import com.invient.vaadin.charts.InvientChartsConfig.Legend.Layout;
import com.invient.vaadin.charts.InvientChartsConfig.NumberYAxis;
import com.invient.vaadin.charts.InvientChartsConfig.Position;
import com.invient.vaadin.charts.InvientChartsConfig.VertAlign;
import com.invient.vaadin.charts.InvientChartsConfig.XAxis;
import com.invient.vaadin.charts.InvientChartsConfig.YAxis;
import com.invient.vaadin.charts.InvientChartsConfig.YAxisDataLabel;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;

public class HomeView extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomeView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new AbsoluteLayout();
		generateChart();
	}
	
	private void generateChart()
	{
		InvientChartsConfig chartConfig = new InvientChartsConfig();
		chartConfig.getGeneralChartConfig().setType(SeriesType.AREA);
		chartConfig.getGeneralChartConfig().setInverted(true);

		chartConfig.getTitle().setText(
				"Average fruit consumption during one week");
		chartConfig.getSubtitle().setStyle(
				"{ position: 'absolute', right: '0px', bottom: '10px'}");

		Legend legend = new Legend();
		legend.setFloating(true);
		legend.setLayout(Layout.VERTICAL);
		legend.setPosition(new Position());
		legend.getPosition().setAlign(HorzAlign.RIGHT);
		legend.getPosition().setVertAlign(VertAlign.TOP);
		legend.getPosition().setX(-150);
		legend.getPosition().setY(100);
		legend.setBorderWidth(1);
		legend.setBackgroundColor(new RGB(255, 255, 255));
		chartConfig.setLegend(legend);

		CategoryAxis xAxis = new CategoryAxis();
		xAxis.setCategories(Arrays.asList("Monday", "Tuesday", "Wednesday",
				"Thursday", "Friday", "Saturday", "Sunday"));
		LinkedHashSet<XAxis> xAxesSet = new LinkedHashSet<InvientChartsConfig.XAxis>();
		xAxesSet.add(xAxis);
		chartConfig.setXAxes(xAxesSet);

		NumberYAxis yAxis = new NumberYAxis();
		yAxis.setTitle(new AxisTitle("Number of units"));
		yAxis.setMin(0.0);
		yAxis.setLabel(new YAxisDataLabel());
		yAxis.getLabel().setFormatterJsFunc(
				"function() {" + " return this.value; " + "}");
		LinkedHashSet<YAxis> yAxesSet = new LinkedHashSet<InvientChartsConfig.YAxis>();
		yAxesSet.add(yAxis);
		chartConfig.setYAxes(yAxesSet);

		chartConfig.getTooltip().setFormatterJsFunc(
				"function() {" + " return '' + this.x + ': ' + this.y; " + "}");

		AreaConfig areaCfg = new AreaConfig();
		areaCfg.setFillOpacity(0.5);
		chartConfig.addSeriesConfig(areaCfg);

		InvientCharts chart = new InvientCharts(chartConfig);

		XYSeries series = new XYSeries("John");
		series.setSeriesPoints(getPoints(series, 3, 4, 3, 5, 4, 10, 12));
		chart.addSeries(series);

		series = new XYSeries("Jane");
		series.setSeriesPoints(getPoints(series, 1, 3, 4, 3, 3, 5, 4));
		chart.addSeries(series);

		chart.setSizeFull();
		chart.setStyleName("v-chart-min-width");
		chart.setHeight("410px");
		
		mainLayout.addComponent(chart);
	}
	
	private static LinkedHashSet<DecimalPoint> getPoints(Series series,
			double... values) {
		LinkedHashSet<DecimalPoint> points = new LinkedHashSet<DecimalPoint>();
		for (double value : values) {
			points.add(new DecimalPoint(series, value));
		}
		return points;
	}

}
