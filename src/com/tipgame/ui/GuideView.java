package com.tipgame.ui;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

public class GuideView extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Label LabelStep3;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label LabelStep2;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Label LabelStep1;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private Label LabelGuide;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public GuideView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		setLabelText();
	}
	
	private void setLabelText()
	{
		LabelStep1.setValue("Im Tabellenblatt 'Tipp' (s.u.) können die Tipps der verschiedenen Mitspieler eingetragen werden. Das Tabellenblatt ist mit einer automatischen Auswertungsfunktion hinterlegt. Das tatsächliche Ergebnis kann dann nach dem Spiel eingetragen werden. Sobald in der Reihe 'Freigabe' die 1 entfernt wurde, wird das Spiel mit in die Bewertung aufgenommen. Die komplette Vorrunde ist in der zeitlichen Reihenfolge bereits angelegt und wird durchgetippt. Der Tipp 'Wer wird Weltmeister' und 'Wie weit kommt Deutschland' sind noch vor Beginn der Vorrunde festzulegen. Bitte auch den Namen nicht vergessen einzutragen!");
		LabelStep3.setValue("Die Punkteverteilung erfolgt wie immer (bei Ergebnis 3:2): "+
							" Treffer: 6-Punkte (3:2) "+
							" Torverhältnis: 4-Punkte (1:0) "+
							" Tendenz: 2-Punkte (4:0) "+
							" Richtige Anzahl geschossener Tore: 1-Punkt (0:5) "+
							" Extratipps (werden erst ganz am Ende hinzugezählt): "+
							" 'Deutschland' (Wie weit kommt Deutschland?): 10-Punkte "+
							" 'Weltmeister' (Wer wird Weltmeister?): 10-Punkte");
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1, "top:0.0px;left:-13.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setColumns(2);
		gridLayout_1.setRows(6);
		
		// LabelGuide
		LabelGuide = new Label();
		LabelGuide.setImmediate(false);
		LabelGuide.setWidth("-1px");
		LabelGuide.setHeight("-1px");
		LabelGuide.setValue("Anleitung:");
		gridLayout_1.addComponent(LabelGuide, 0, 0);
		gridLayout_1.setComponentAlignment(LabelGuide, new Alignment(33));
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		gridLayout_1.addComponent(verticalLayout_1, 0, 1);
		
		// LabelStep1
		LabelStep1 = new Label();
		LabelStep1.setImmediate(false);
		LabelStep1.setWidth("460px");
		LabelStep1.setHeight("-1px");
		LabelStep1.setValue("Label");
		gridLayout_1.addComponent(LabelStep1, 1, 1);
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		gridLayout_1.addComponent(verticalLayout_2, 0, 2);
		
		// LabelStep2
		LabelStep2 = new Label();
		LabelStep2.setImmediate(false);
		LabelStep2.setWidth("460px");
		LabelStep2.setHeight("-1px");
		LabelStep2.setValue("Label");
		gridLayout_1.addComponent(LabelStep2, 1, 2);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		gridLayout_1.addComponent(verticalLayout_3, 0, 3);
		
		// LabelStep3
		LabelStep3 = new Label();
		LabelStep3.setImmediate(false);
		LabelStep3.setWidth("460px");
		LabelStep3.setHeight("-1px");
		LabelStep3.setValue("Label");
		gridLayout_1.addComponent(LabelStep3, 1, 3);
		
		return gridLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Schritt 1: ");
		verticalLayout_1.addComponent(label_1);
		verticalLayout_1.setComponentAlignment(label_1, new Alignment(20));
		
		return verticalLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Schritt 2: ");
		verticalLayout_2.addComponent(label_2);
		verticalLayout_2.setComponentAlignment(label_2, new Alignment(20));
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Anmerkung 1:");
		verticalLayout_3.addComponent(label_3);
		verticalLayout_3.setComponentAlignment(label_3, new Alignment(20));
		
		return verticalLayout_3;
	}

}
